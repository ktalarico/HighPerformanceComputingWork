#include<iostream>
#include<stdlib.h>
#include<chrono>
#include<ctime>
#include<omp.h>

int main(){
  using std::chrono::steady_clock;
  steady_clock::time_point start, end;
  int n = 1000*1000;
  #pragma omp parallel
  {
    float *a;
    int p = omp_get_thread_num();
    posix_memalign((void **)&a, 32, n*sizeof(float));
    if(p==0)
      {
	start = steady_clock::now();
      }

    for(int i=0; i<n;i++){
      a[i]=0;
    }
    
    if(p==0)
      {
	end = steady_clock::now();
      }
    free(a);
  }
  duration<double> elapsed_time = duration_cast<duration<double>>(end-start);
  std::cout<<"Took: "<< elapsed_time.count() << "\n";
}
